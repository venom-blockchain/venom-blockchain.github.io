"use strict";(self.webpackChunkve_ps=self.webpackChunkve_ps||[]).push([[8720],{4137:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),m=c(n),d=r,h=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return n?o.createElement(h,l(l({ref:t},p),{},{components:n})):o.createElement(h,l({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a.mdxType="string"==typeof e?e:r,l[1]=a;for(var c=2;c<i;c++)l[c]=n[c];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4714:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var o=n(7462),r=(n(7294),n(4137));const i={sidebar_position:2,sidebar_label:"Setting Up The Venom Smart Contract Development Environment",description:"The first thing to do before starting the smart contracts development"},l="Setting Up The Venom Smart Contract Development Environment",a={unversionedId:"build/development-guides/setting-up-the-venom-smart-contract-development-environment",id:"build/development-guides/setting-up-the-venom-smart-contract-development-environment",title:"Setting Up The Venom Smart Contract Development Environment",description:"The first thing to do before starting the smart contracts development",source:"@site/docs/build/development-guides/setting-up-the-venom-smart-contract-development-environment.md",sourceDirName:"build/development-guides",slug:"/build/development-guides/setting-up-the-venom-smart-contract-development-environment",permalink:"/build/development-guides/setting-up-the-venom-smart-contract-development-environment",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"Setting Up The Venom Smart Contract Development Environment",description:"The first thing to do before starting the smart contracts development"},sidebar:"buildSidebar",previous:{title:"Comparing Ethereum vs. Venom architectures",permalink:"/build/development-guides/comparing-of-ethereum-vs-venom-architectures"},next:{title:"Fungible tokens in Venom network",permalink:"/build/development-guides/how-to-create-your-own-fungible-tip-3-token/fungible-tokens-in-venom-network"}},s={},c=[{value:"Let&#39;s install it",id:"lets-install-it",level:2},{value:"Initialize your first project",id:"initialize-your-first-project",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Run The Local Node",id:"run-the-local-node",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"setting-up-the-venom-smart-contract-development-environment"},"Setting Up The Venom Smart Contract Development Environment"),(0,r.kt)("p",null,"To improve your development experience, you may need some tools and utils to compile, deploy and test your Venom contracts. ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/broxus/locklift/"},"Locklift")," is a development environment like Hardhat or Truffle."),(0,r.kt)("h2",{id:"lets-install-it"},"Let's install it"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell-session"},"npm install -g locklift\nlocklift --version\n> 2.1.10\n")),(0,r.kt)("h2",{id:"initialize-your-first-project"},"Initialize your first project"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell-session"},"locklift init --path sample-project\n> New Locklift project initialized in sample-project\n> Installing required dependencies...\n> ...\n> LockLift initialized in setup-env happy hacking!\n")),(0,r.kt)("p",null,"This command initializes a new Locklift project, filled with samples:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-txt"},"\u251c\u2500\u2500 locklift.config.ts\n\u251c\u2500\u2500 tsconfig.json\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 package-lock.json\n\u2502\n\u251c\u2500\u2500 contracts\n\u2502   \u2514\u2500\u2500 Sample.tsol\n\u251c\u2500\u2500 scripts \n\u2502   \u2514\u2500\u2500 1-deploy-sample.ts\n\u2514\u2500\u2500 test\n    \u2514\u2500\u2500 sample-test.ts\n")),(0,r.kt)("h2",{id:"configuration"},"Configuration"),(0,r.kt)("p",null,"The configuration file is called ",(0,r.kt)("inlineCode",{parentName:"p"},"locklift.config.ts"),". Here's the basic layout for Venom blockchain networks:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import { LockliftConfig } from "locklift";\nimport { FactorySource } from "./build/factorySource";\n\ndeclare global {\n  const locklift: import("locklift").Locklift<FactorySource>;\n}\n\nconst LOCAL_NETWORK_ENDPOINT = "http://localhost/graphql";\n\nconst config: LockliftConfig = {\n  compiler: {\n    version: "0.62.0",\n  },\n  linker: {\n    version: "0.15.48",\n  },\n  networks: {\n    // Configuration of \'local\' network can be left unchanged\n    local: {\n      connection: {\n        group: "localnet",\n        type: "graphql",\n        data: {\n          endpoints: [LOCAL_NETWORK_ENDPOINT],\n          latencyDetectionInterval: 1000,\n          local: true,\n        },\n      },\n      // This giver is default local-node giverV2\n      giver: {\n        address: "0:ece57bcc6c530283becbbd8a3b24d3c5987cdddc3c8b7b33be6e4a6312490415",\n        key: "172af540e43a524763dd53b26a066d472a97c4de37d5498170564510608250c3",\n      },\n      tracing: {\n        endpoint: LOCAL_NETWORK_ENDPOINT,\n      },\n      keys: {\n        // Use everdev to generate your phrase\n        // !!! Never commit it in your repos !!!\n        phrase: "action inject penalty envelope rabbit element slim tornado dinner pizza off blood",\n        amount: 20,\n      },\n    },\n  },\n  mocha: {\n    timeout: 2000000\n  }\n};\n\nexport default config;\n\n')),(0,r.kt)("p",null,"Let's go through each parameter"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"compiler.version")," The version of the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/tonlabs/TON-Solidity-Compiler"},"solidity compiler")," binary\n",(0,r.kt)("inlineCode",{parentName:"p"},"linker.version")," The version of the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/tonlabs/TVM-linker"},"TVM-linker")," binary"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"networks"),"  Specifies which networks are available for deployment and testing\n",(0,r.kt)("inlineCode",{parentName:"p"},"networks.[NETWORK_NAME].keys.phrase")," If you leave this field value empty - a new random seed will be generated each time you're running locklift. Or specify it explicitly - fill the ",(0,r.kt)("inlineCode",{parentName:"p"},"phrase")," field with a mnemonic phrase."),(0,r.kt)("h2",{id:"run-the-local-node"},"Run The Local Node"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"You need to have a ",(0,r.kt)("a",{parentName:"p",href:"https://www.docker.com"},"docker")," runtime to continue with this guide")),(0,r.kt)("p",null,"If Locklift is like a Hardhat development environment tool, then local-node is Ganache-like a local blockchain that is designed for dapp debugging and testing."),(0,r.kt)("p",null,"To run local-node you need to follow a command"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"}," docker run -d -e USER_AGREEMENT=yes --rm --name local-node -p80:80 tonlabs/local-node\n")),(0,r.kt)("p",null,"The container exposes the specified 80 port with Nginx which proxies requests to /graphql to GraphQL API."),(0,r.kt)("p",null,"Check out GraphQL playground at ",(0,r.kt)("a",{parentName:"p",href:"http://localhost/graphql"},"http://localhost/graphql")),(0,r.kt)("p",null,"That's all! You can run tests and start to develop your amazing projects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"locklift test --network local --config ./locklift.config.ts\n")),(0,r.kt)("p",null,"The next step in your learning is ",(0,r.kt)("a",{parentName:"p",href:"/build/development-guides/how-to-create-your-own-fungible-tip-3-token/fungible-tokens-in-venom-network"},"here")),(0,r.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"If you are using macOS on Apple M1, follow these commands before starting tutorial"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell-session"},"// Install Rosseta2\nsoftwareupdate --install-rosetta\n\n// Start a shell under Rosetta2\narch -x86_64 zsh\n\n// If you already have installed nodejs,\n// reinstall the x64 version of Node.js\nnvm use system\nnvm cache clear\nnvm uninstall 16 # or the version you need, but not less than 14\nnvm install 16   # or the version you need, but not less than 14\nnvm use 16       # or the version you need, but not less than 14\n")),(0,r.kt)("p",null,"All  ",(0,r.kt)("inlineCode",{parentName:"p"},"locklift")," commands must be performed from under the Rosetta2 shell")))}u.isMDXComponent=!0}}]);