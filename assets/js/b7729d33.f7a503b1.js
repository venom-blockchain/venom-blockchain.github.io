"use strict";(self.webpackChunkve_ps=self.webpackChunkve_ps||[]).push([[788],{4137:(t,e,a)=>{a.d(e,{Zo:()=>d,kt:()=>u});var n=a(7294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var p=n.createContext({}),s=function(t){var e=n.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},d=function(t){var e=s(t.components);return n.createElement(p.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},c=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,p=t.parentName,d=o(t,["components","mdxType","originalType","parentName"]),c=s(a),u=r,k=c["".concat(p,".").concat(u)]||c[u]||m[u]||l;return a?n.createElement(k,i(i({ref:e},d),{},{components:a})):n.createElement(k,i({ref:e},d))}));function u(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=c;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o.mdxType="string"==typeof t?t:r,i[1]=o;for(var s=2;s<l;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},8876:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var n=a(7462),r=(a(7294),a(4137));const l={title:"4.2.2 New JSON Metadata",sidebar_position:2,slug:"TIP-4.2.2"},i="Non-Fungible Token JSON Metadata (TIP-4.2.2)",o={unversionedId:"standards/TIP/TIP-4/2_2",id:"standards/TIP/TIP-4/2_2",title:"4.2.2 New JSON Metadata",description:"Abstract",source:"@site/docs/standards/TIP/TIP-4/2_2.md",sourceDirName:"standards/TIP/TIP-4",slug:"/standards/TIP/TIP-4/TIP-4.2.2",permalink:"/standards/TIP/TIP-4/TIP-4.2.2",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"4.2.2 New JSON Metadata",sidebar_position:2,slug:"TIP-4.2.2"},sidebar:"standardSidebar",previous:{title:"TIP-4.2",permalink:"/standards/TIP/TIP-4/2"},next:{title:"TIP-4.3",permalink:"/standards/TIP/TIP-4/3"}},p={},s=[{value:"Abstract",id:"abstract",level:2},{value:"Motivation",id:"motivation",level:2},{value:"Specification",id:"specification",level:2},{value:"TIP4_2_2Collection",id:"tip4_2_2collection",level:2},{value:"TIP4_2_2Collection.getNftUrl()",id:"tip4_2_2collectiongetnfturl",level:3},{value:"TIP4_2_2Collection.getCollectionUrl()",id:"tip4_2_2collectiongetcollectionurl",level:3},{value:"TIP4_2_2NFT",id:"tip4_2_2nft",level:2},{value:"ITIP4_2_2NFT.getUrlParts()",id:"itip4_2_2nftgeturlparts",level:3},{value:"Metadata format",id:"metadata-format",level:3},{value:"Example",id:"example",level:3},{value:"How to add the new JSON metadata type?",id:"how-to-add-the-new-json-metadata-type",level:2},{value:"References",id:"references",level:2}],d={toc:s};function m(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"non-fungible-token-json-metadata-tip-422"},"Non-Fungible Token JSON Metadata (TIP-4.2.2)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"author: ELena Khramtsova <Helen.Andrianova@gmail.com>, Aleksandr Khramtsov <aleksandr.hramcov@gmail.com>\ntype: Contract\ncreated: 2024-06-07\nRequires: TIP-6\n")),(0,r.kt)("h2",{id:"abstract"},"Abstract"),(0,r.kt)("p",null,"This is an alternative standard for storing metadata, but in a more familiar form for EVM users of such networks. It is not compatible with basic Tip4.2"),(0,r.kt)("p",null,"This standard proposes storing metadata outside the blockchain (centralized backing, ipfs, etc.)"),(0,r.kt)("h2",{id:"motivation"},"Motivation"),(0,r.kt)("p",null,"The implementation below solves several problems at once:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"For Mystery-type collections, it makes reveal cheap and makes it easier to execute"),(0,r.kt)("li",{parentName:"ul"},"Helps avoid storing json onchain. Storing and replacing json in a contract is expensive."),(0,r.kt)("li",{parentName:"ul"},"Makes it possible to change metadata without making a bunch of transactions to the blockchain"),(0,r.kt)("li",{parentName:"ul"},"Familiar metadata format for those who have already released collections on EVM"),(0,r.kt)("li",{parentName:"ul"},"In the future, this will make it easier to bridge/issue NFT on multiple blockchains")),(0,r.kt)("h2",{id:"specification"},"Specification"),(0,r.kt)("p",null,"The keywords \u201cMUST\u201d, \u201cMUST NOT\u201d, \u201cREQUIRED\u201d, \u201cSHALL\u201d, \u201cSHALL NOT\u201d, \u201cSHOULD\u201d, \u201cSHOULD NOT\u201d, \u201cRECOMMENDED\u201d, \u201cMAY\u201d, and \u201cOPTIONAL\u201d in this document are to be interpreted as described in ",(0,r.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/html/rfc2119"},"RFC 2119")),(0,r.kt)("h2",{id:"tip4_2_2collection"},"TIP4_2_2Collection"),(0,r.kt)("p",null,"New features appear in the collection."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"pragma ever-solidity >= 0.62.0;\n\ninterface ITIP4_2_2Collection {\n\n    /// The TIP-6.1 identifier for this interface is 0x244a5200\n\n    /// @notice The event emits when set or change collection metadata\n    event collectionMetadataUpdated();\n\n    /// @notice The event emits when set or change NFTs metadata\n    event nftMetadataUpdated();\n\n    /// @notice build url to get metadata for NFT\n    /// @return nftUrl - url to get metadata for NFT\n    /// @param parts is TvmCell from NFT for build the link to metadata\n    function getNftUrl(TvmCell parts) external responsible returns (string nftUrl);\n\n    /// @notice build url to get metadata for NFT\n    /// @return collectionUrl - url to get metadata for NFT\n    function getCollectionUrl() external view responsible returns (string collectionUrl);\n\n}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NOTE")," The ",(0,r.kt)("a",{parentName:"p",href:"/standards/TIP/TIP-6/1"},"TIP-6.1")," identifier for this interface is ",(0,r.kt)("inlineCode",{parentName:"p"},"0x244a5200"),"."),(0,r.kt)("h3",{id:"tip4_2_2collectiongetnfturl"},"TIP4_2_2Collection.getNftUrl()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function getNftUrl(TvmCell parts) external responsible returns (string nftUrl);\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"parts")," (",(0,r.kt)("inlineCode",{parentName:"li"},"TvmCell"),") -  is TvmCell from NFT for build the link to metadata")),(0,r.kt)("p",null,"The function, based on the main link and the part it received, builds the final link to the NFT metadata. In the case of collections, mystery box can describe more complex logic in which the display of the final link will depend on the flag the sale of the collection is completed or not."),(0,r.kt)("h3",{id:"tip4_2_2collectiongetcollectionurl"},"TIP4_2_2Collection.getCollectionUrl()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function getCollectionUrl() external view responsible returns (string collectionUrl);\n")),(0,r.kt)("p",null,"The function is analogous to the getJson function in the Type4.2 standard but returns not json but a link to the json metadata of the collection."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"event collectionMetadataUpdated();\nevent nftMetadataUpdated();\n")),(0,r.kt)("p",null,"You must emit them when you change the metadata of collection or NFT."),(0,r.kt)("h2",{id:"tip4_2_2nft"},"TIP4_2_2NFT"),(0,r.kt)("p",null,"Each NFT now stores only a part of the link by which the metadata for it can be uniquely identified, and the metadata can be obtained by attaching this part to the collection function ",(0,r.kt)("inlineCode",{parentName:"p"},"getNftUrl(TvmCell parts)"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NOTE")," The ",(0,r.kt)("a",{parentName:"p",href:"/standards/TIP/TIP-6/1"},"TIP-6.1")," identifier for this interface is ",(0,r.kt)("inlineCode",{parentName:"p"},"0x7239d7b1"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"pragma ever-solidity >= 0.62.0;\n\ninterface ITIP4_2_2NFT {\n\n\n    /// The TIP-6.1 identifier for this interface is 0x7239d7b1.\n\n    /// @notice event emits when update NFT part.\n    event metadataUpdated();\n\n    /// @notice NFT part to get metadata\n    /// @return part - TvmCell allows to build URL with metadata for this NFT\n    function getUrlParts() external view responsible returns (TvmCell part);\n\n}\n")),(0,r.kt)("h3",{id:"itip4_2_2nftgeturlparts"},"ITIP4_2_2NFT.getUrlParts()"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"function getUrlParts() external view responsible returns (TvmCell part);\n")),(0,r.kt)("p",null,"The function returns the part identifying the NFT in the form of a TvmCell, which gives greater variability. In the simplest version, this could be id."),(0,r.kt)("p",null,"You must emit event ",(0,r.kt)("inlineCode",{parentName:"p"},"metadataUpdated()")," when NFT part update."),(0,r.kt)("h3",{id:"metadata-format"},"Metadata format"),(0,r.kt)("p",null,'JSON metadata type: "Basic NFT"'),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Basic NFT")," use for links to files stores in web. JSON fields contain information about item, files and preview info."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Basic NFT")," describes fields that must be in JSON.\nThe ",(0,r.kt)("inlineCode",{parentName:"p"},"attributes")," field may not be present in the JSON metadata."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field name"),(0,r.kt)("th",{parentName:"tr",align:null},"type"),(0,r.kt)("th",{parentName:"tr",align:null},"Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"type")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},'"Basic NFT"'),(0,r.kt)("td",{parentName:"tr",align:null},"Constant name for this type")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"name")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the object")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"description")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Description of the object")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"preview")),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Object preview")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"preview.source")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Link to object. Contains protocol and data source. Delimiter is ",(0,r.kt)("strong",{parentName:"td"},":"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"preview.mimetype")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types"},"Mime type")," of object")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"files")),(0,r.kt)("td",{parentName:"tr",align:null},"array"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Array of objects.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"file.source")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Link to object. Contains protocol and data source. Delimiter is ",(0,r.kt)("strong",{parentName:"td"},":"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"file.mimetype")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types"},"Mime type")," of object")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"attributes")),(0,r.kt)("td",{parentName:"tr",align:null},"array"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Array of objects.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"attributes.trait_type")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Type of attribute (Base, Eyes ...)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"attributes.value")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Value of attribute (Starfish, Blue ...)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"external_url")),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"URL to website")))),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JSON"},'{\n    "type": "Basic NFT",\n    "name": "Sample Name",\n    "description": "Hello world!",\n    "preview": {\n        "source": "https://everscale.network/images/Backgrounds/Main/main-hero.png",\n        "mimetype": "image/png"\n    },\n    "files": [\n        {\n            "source": "https://everscale.network/images/Backgrounds/Main/main-hero.png",\n            "mimetype": "image/png"\n        }\n    ],\n     "attributes": [\n         {\n              "trait_type": "Base", \n              "value": "Starfish"\n         }, \n         {\n              "trait_type": "Eyes", \n              "value": "blue"\n         } ]\n    "external_url": "https://everscale.network"\n}\n')),(0,r.kt)("p",null,"You can extend ",(0,r.kt)("inlineCode",{parentName:"p"},"Basic NFT")," type for your custom fields."),(0,r.kt)("h2",{id:"how-to-add-the-new-json-metadata-type"},"How to add the new JSON metadata type?"),(0,r.kt)("p",null,"For added new metadata type of ",(0,r.kt)("a",{parentName:"p",href:"/standards/TIP/TIP-4/TIP-4.2.2"},"TIP-4.2.2")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Create product that use new JSON type."),(0,r.kt)("li",{parentName:"ul"},"Send PR for change the docs."),(0,r.kt)("li",{parentName:"ul"},"Explain why it will be in Standard.")),(0,r.kt)("h2",{id:"references"},"References"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://eips.ethereum.org/EIPS/eip-721"},"Ethereum EIP-721")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.metaplex.com/token-metadata/specification"},"Solana v1.2.0")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/ton-blockchain/TIPs/issues/62"},"TON NFT"),", ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/ton-blockchain/TIPs/issues/64"},"TON DATA")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://gitlab.com/tezos/tzip/-/blob/master/proposals/tzip-12/tzip-12.md"},"Tezos TZIP12")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.binance.org/smart-chain/developer/nft-metadata-standard.html"},"BNS BEP721"))))}m.isMDXComponent=!0}}]);